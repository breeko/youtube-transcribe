type Media @model
  @auth(rules: [
    { allow: public, operations: [read] }
    { allow: groups, groups: ["admin"] }
  ]) {
    id: ID!
    name: String!
    image: String!
    videos: [Video] @connection(name: "Videos")
  }

type Video @model
  @auth(rules: [
    { allow: public, operations: [read] }
    { allow: groups, groups: ["admin"] }
  ]) {
  id: ID!
  name: String!
  media: Media! @connection(name: "Videos")
  image: String
  videoPath: String!
  transcript: String!
  created: AWSDate
  published: AWSDate!
  length: Int!
  description: String
  editors: [VideoEditor] @connection(name: "VideoEditors")
}

type User @model
  @auth(rules: [
    { allow: public, operations: [read] }
    { allow: groups, groups: ["admin"] }
  ]) {
    id: ID!
    email: String!
    videos: [VideoEditor] @connection(name: "UserEditors")
    credits: Float!
  }

type VideoEditor @model(queries: null)
  @auth(rules: [
    { allow: public, operations: [read] }
    { allow: groups, groups: ["admin"] }
  ]) {
    id: ID!
    video: Video! @connection(name: "VideoEditors")
    editor: User! @connection(name: "UserEditors")
}
